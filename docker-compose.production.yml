version: '3.2'
services:
  redis:
    image: redis:alpine
    volumes:
      - 'redis:/data'

  nginx:
    image: nginx-alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - public:/var/www/it52/public
      - config/nginx:/etc/nginx/conf.d
      - config/certbot/conf:/etc/letsencrypt
      - config/certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - certbot

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - config/certbot/conf:/etc/letsencrypt
      - config/certbot/www:/var/www/certbot

  backend: &backend
    image: it52/rails:production
    build:
      context: .
      dockerfile: Dockerfile.production
      cache_from:
        - it52/rails:production
      args:
        - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
        - VCS_REF=${VCS_REF}
        - BUILD_DATE=${BUILD_DATE}
        - VERSION=${VERSION}
    tmpfs:
      - /tmp
    stdin_open: true
    tty: true
    env_file:
      - '.env'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}

  rails:
    <<: *backend
    volumes:
      - .:/it52
      - bundle:/it52/vendor/bundle
      - public:/it52/public
    depends_on:
      - redis

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - .:/it52
      - bundle:/it52/vendor/bundle
    depends_on:
      - redis

volumes:
  redis:
  bundle:
  public:
